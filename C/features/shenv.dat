option-file ../dioptions.dat

loadunit env-main
loadunit env-systype
loadunit env-cc
loadunit env-msgfmt
loadunit env-extension

output  di-sh.env

system type
system rev
system arch
cc
using_gcc
using_gnu_ld
using_clang
cflags
ldflags
# needed for tcl build
addcflag -fPIC

# standard flags
addcflag -Wextra
addcflag -Wno-unused-but-set-variable
addcflag -Wno-unused-parameter
addcflag -Wno-float-equal
addcflag -Wno-shift-sign-overflow

# gcc hardening
# reference: wiki.debian.org/Hardening
addcflag -Wformat
addcflag -Wformat-security
addcflag -Werror=format-security
addcflag -D_FORTIFY_SOURCE=2

# these confuse other compilers...make them GCC only
# solaris will not link w/-fstack-protector, so it
# can only be set when the gnu linker is in use.
if UsingGNU_LD ( == _MKCONFIG_USING_GNU_LD Y ) && ( == _MKCONFIG_USING_GCC Y )
 ifnotoption NO_PIE
  addcflag -fstack-protector-strong
  addcflag -fstack-protector-all
  addldflag -fstack-protector-strong
  addldflag -fstack-protector-all
 endif
endif

# these confuse other compilers...make them CLANG only
if UsingCLANG == _MKCONFIG_USING_CLANG Y
 addcflag -Werror,-Wunused-command-line-argument
 ifnotoption NO_PIE
  addcflag -fstack-protector-strong
  addcflag -fstack-protector-all
  addldflag -fstack-protector-strong
  addldflag -fstack-protector-all
 endif
endif

libs
cflags_shared
ldflags_shared
sharednameflag
shareexeclinkflag
sharerunpathflag

findconfig tclConfig
if Have_tclConfig == config_tclConfig Y
 addconfig TCL_STUB_LIB_SPEC ldflags_libs_application
 addconfig TCL_INCLUDE_SPEC cflags_include
endif

extension obj
extension exe
cmd_msgfmt

extension shlib
